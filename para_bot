#!/bin/bash

# para_bot, the Telegram bot written in bash.
# Written by si_kabayan

#set -o nounset
#set -o errexit
#set -o pipefail

# variables --------------------------------------------------------------------

WHITELIST=no

# functions --------------------------------------------------------------------

bot_init() {

  BOT_START="$(date +%s)"

  printf "%s\n" "Loading configuration..."
  . para_bot.conf

  printf "%s\n" "Sourcing API parser..."
  . ./libs/bindings

  printf "%s\n" "Sourcing plugins..."
  for file in ./plugins/*; do
    if [[ -f $file ]]; then
      . $file
    fi
  done

}

# check if a value is in the array
contains() {
  local n=$#
  local value=${!n}
  for ((i=1;i < $#;i++)) {
    if [[ "${!i}" == "${value}" ]]; then
      printf "%s\n" "y"
      return 0
    fi
  }
  printf "%s\n" "n"
  return 1
}

skip_old_messages() {
  OFFSET="$(curl "$BASE_URL/getUpdates?timeout=30")"
  OFFSET="${OFFSET##*update_id\":}"
  OFFSET="${OFFSET%%,*}"
}

process_msg() {

# run message if it's a function
if [[ "$(type -t $CMD)" = function ]]; then
  "$CMD"
fi

}

# main -------------------------------------------------------------------------

bot_init

skip_old_messages

while true; do {

  get_updates

  # go to next message
  OFFSET="$((OFFSET+1))"

  if [[ $OFFSET != 1 ]]; then
    # respond to whitelisted only
    if [[ $WHITELIST = yes ]]; then
      if [[ $CHAT_ID > 0 || $(contains "${ALLOWED[@]}" "$CHAT_ID") = "y" ]]; then
        process_msg
      fi
    elif [[ $WHITELIST = no ]]; then
      process_msg
    fi
  fi

} &>/dev/null; done
