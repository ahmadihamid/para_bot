#!/bin/bash

# para_bot, the Telegram bot written in bash.
# Written by si_kabayan
# Inspired by http://github.com/topkecleon/bashbot

# variables --------------------------------------------------------------------

token=''
url='https://api.telegram.org/bot'$token
send_massage=$url'/sendMessage?chat_id='
get_updates=$url'/getUpdates?offset='
offset=0
timeout='timeout=20'
bot_start=$(date +%s)

# functions --------------------------------------------------------------------

function send_message {
  curl --data-urlencode "action=typing" "$url/sendChatAction?chat_id=$1&"
  res=$(curl --data-urlencode "text=$2" \
  "$send_massage$1&reply_to_message_id=$3&disable_web_page_preview=1&")
}

# main -------------------------------------------------------------------------

while true; do {

  set -f

  res=$(curl $get_updates$offset$timeout)

  if [[ ${#res} > 23 ]]
  then
    chat_id=${res##*id\":}
    chat_id=${chat_id%%,*}
    offset=${res#*id\":}
    offset=${offset%%,*}
    message=${res#*\\}
    message=${message%%\"*}
    message=${message/\\/}
    message_id=${res#*message_id\":}
    message_id=${message_id%%,*}
    unix_date=${res##*date\":}
    unix_date=${unix_date%%,*}
  else
    chat_id=
    offset=
    message=
    message_id=
    unix_date=
  fi

  message=${message/@para_bot/}

  offset=$((offset+1))

  if [[ $unix_date > $(($bot_start-1)) ]] && [[ $offset != 1 ]] \
  && [[ $chat_id = -18812428 ]] || [[ $chat_id = -15387310 ]]
  then
    case "${message%% *}" in
      '/info')
        msg='This is para_bot, the Telegram bot written in bash.'
      ;;
      '/calc')
        if [[ ${message:6} = *[!\ ]* ]]
        then
          expression="$(printf "%s\n" "${message:6}" | bc -l 2>&1)"
          is_error=${expression//[![:alpha:]]}
          if [[ ${#is_error} > 3 ]]
          then
            msg="$expression"
          else
            msg="$(printf "%s\n" ${expression%%.*}.${expression:(-20):2})"
          fi
        else
          msg="/calc <expression>
          Calculator powered by bc, an arbitrary precision calculator language."
        fi
      ;;
      '/ddg')
        query=${message:5}
        query=${query/\!/\%21}
        query=${query// /+}
        if [[ $query = *[!\ ]* ]]
        then
          ddget=$(curl -s -X GET "https://api.duckduckgo.com/?q=%5C$query&kp=1\
          &format=json&kp=1&no_redirect=1&no_html=1")
          ddget="${f##*Redirect\":\"}"
          msg="${ddget%%\",\"DefinitionURL*}"
        else
          msg="/ddg <query>
          Performs a DuckDuckGo instant search for the given query."
        fi
      ;;
      '/echo')
        gsm="${message:6}"
        if [[ $gsm = *[!\ ]* ]]
        then
          msg="$gsm"
        else
          msg="/echo <text>
          Repeat a string."
        fi
      ;;
      '/help')
        msg='Available commands:
        - /about
        - /calc <expression>
        - /ddg <query>
        - /echo <text>
        - /help [command]
        - /info
        - /jam'
      ;;
      '/jam')
        H=$(date +%H)
        MS=$(date +%M:%S)
        msg=$(printf "%s\n" "UTC : $(date -u +%T)" "WIB : $H:$MS" \
        "WIT: $(($H+1)):$MS" "WITA: $(($H+2)):$MS")
      ;;
      '/kamus')
        query="${message:7}"
        if [[ $query = *[!\ ]* ]]
        then
          definition="$(sed -n -e /^"$query\t"/Ip ./libs/kbbi.txt \
          | sed -e "s|[\]n|\n|g;s|^$query.*\t||I")"
          if [[ -n $definition ]]
          then
            msg="$definition"
          else
            msg='Maaf, kata yang dicari tidak ada dalam KBBI Edisi III (2005).'
          fi
        else
          msg="/kamus <term>
          Kamus Besar Bahasa Indonesia, Edisi III (2005)."
        fi
      ;;
      *) msg='';;
    esac
    send_message "$chat_id" "$msg" "$message_id"
  fi

} &>/dev/null; done
